# Multi-stage build for Go relayer
FROM golang:1.21-alpine AS builder

# Install dependencies
RUN apk add --no-cache git ca-certificates tzdata

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go-relayer/go.mod go-relayer/go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY go-relayer/ ./

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o relayer cmd/relayer/main.go

# Final stage
FROM alpine:latest

# Install ca-certificates for HTTPS requests
RUN apk --no-cache add ca-certificates tzdata

# Create non-root user
RUN addgroup -g 1001 -S relayer && \
    adduser -u 1001 -S relayer -G relayer

# Create directories
RUN mkdir -p /app/config /app/logs && \
    chown -R relayer:relayer /app

# Set working directory
WORKDIR /app

# Copy binary from builder stage
COPY --from=builder /app/relayer .
COPY --chown=relayer:relayer config/relayer-config.template.yaml config/

# Switch to non-root user
USER relayer

# Expose ports
EXPOSE 8080 9090

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# Default command
CMD ["./relayer", "start", "--config", "config/config.yaml"]

